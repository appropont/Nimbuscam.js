#!/usr/bin/env node
var
  imagediff = require('../imagediff.js'),
  Canvas = require('canvas');

commandLine(process.argv.slice(2));

function do_exit (is_equal) {
  process.exit(is_equal ? 0 : 1);
}

function commandLine (args) {

  if (args.length < 3) {
    console.log("Invalid parameters:");
    console.log("imagediff [-e|equal] [-t|tolerance VALUE] FILE_A FILE_B");
    console.log("imagediff [-d|diff] FILE_A FILE_B OUTPUT_FILE");
    return;
  }

  var
    a = new Canvas.Image(),
    b = new Canvas.Image(),
    t = 0,
    aName, bName, i, fn, equal, result, output;

  for (i = args.length - 2; i--;) {
    switch (args[i]) {
      case '-d':
      case 'diff':
        fn = 'diff';
        break;
      case '-e':
      case 'equal':
        fn = 'equal'
        break;
      case '-t':
      case 'tolerance':
        t = args[i + 1];
        break;
    }
  }

  if (fn === 'diff') {
    if (args.length < 4) throw '-d option expects an output';
    output = args.pop();
  }
  b.src = bName = args.pop();
  a.src = aName = args.pop();
  a = imagediff.toImageData(a);
  b = imagediff.toImageData(b);

  equal = imagediff.equal(a, b, t);

  if (fn === 'equal') {
    process.stdout.write(equal ? 'true\n' : 'false\n');
    do_exit(equal);
  } else if (fn === 'diff') {
    result = imagediff.diff(a, b, t);
    imagediff.imageDataToPNG(result, output, function () {
      do_exit(equal);
      process.stdout.write('Diff of ' + aName + ' and ' + bName + ' rendered to ' + output + '\n');
    });
  }
};
